#ifndef __LCD_CHARMAP_H__
#define __LCD_CHARMAP_H__

// character mapping 
// each element maps UTF16 code to equavalent latin char or to a custom bitmap for rendering on LCD
//
// examples:
//
// char with latin equivalent
// {1040,'A'}
//
// custom char
// {1041,0,{    
//  0b11111, // 8x5 bitmap array for LCD
//  0b10000,
//  0b10000,
//  0b11110,
//  0b10001,
//  0b10001,
//  0b11110,
//  0b00000
// }

const PROGMEM CharMap char_mapping[] = {
  {1040,'A'},  // А
  {1041,0,{    // Б
  0b11111,
  0b10000,
  0b10000,
  0b11110,
  0b10001,
  0b10001,
  0b11110,
  0b00000
}},    
  {1042,'B'},  // В
  {1043,0,{    // Г
  0b11111,
  0b10000,
  0b10000,
  0b10000,
  0b10000,
  0b10000,
  0b10000,
  0b00000
}},   
  {1044,0,{    // Д
  0b00110,
  0b01010,
  0b01010,
  0b01010,
  0b01010,
  0b01010,
  0b11111,
  0b10001
}},    
  {1045,'E'},  // Е
  {1025,'E'},  // Ё
  {1046,0,{    // Ж
  0b10101,
  0b10101,
  0b10101,
  0b01110,
  0b10101,
  0b10101,
  0b10101,
  0b00000
}},    
  {1047,0,{    // З
  0b01110,
  0b10001,
  0b00001,
  0b00110,
  0b00001,
  0b10001,
  0b01110,
  0b00000
}},    
  {1048,0,{    // И
  0b10001,
  0b10001,
  0b10001,
  0b10011,
  0b10101,
  0b11001,
  0b10001,
  0b00000
}},    
  {1049,0,{    // Й
  0b10101,
  0b10001,
  0b10001,
  0b10011,
  0b10101,
  0b11001,
  0b10001,
  0b00000
}},    
  {1050,'K'},  // К
  {1051,0,{    // Л
  0b00111,
  0b01001,
  0b01001,
  0b01001,
  0b01001,
  0b01001,
  0b10001,
  0b00000
}},    
  {1052,'M'},  // М
  {1053,'H'},  // Н
  {1054,'O'},  // О
  {1055,0,{    // П
  0b11111,
  0b10001,
  0b10001,
  0b10001,
  0b10001,
  0b10001,
  0b10001,
  0b00000
}},    
  {1056,'P'},  // Р
  {1057,'C'},  // С
  {1058,'T'},  // Т
  {1059,0,{    // У
  0b10001,
  0b10001,
  0b10001,
  0b01111,
  0b00001,
  0b10001,
  0b01110,
  0b00000
}},    
  {1060,0,{    // Ф
  0b00100,
  0b01110,
  0b10101,
  0b10101,
  0b10101,
  0b01110,
  0b00100,
  0b00000
}},    
  {1061,'X'},  // Х
  {1062,0,{    // Ц
  0b10010,
  0b10010,
  0b10010,
  0b10010,
  0b10010,
  0b10010,
  0b11111,
  0b00001
}},    
  {1063,0,{    // Ч
  0b10001,
  0b10001,
  0b10001,
  0b01111,
  0b00001,
  0b00001,
  0b00001,
  0b00000
}},    
  {1064,0,{    // Ш
  0b10001,
  0b10001,
  0b10001,
  0b10101,
  0b10101,
  0b10101,
  0b11111,
  0b00000
}},    
  {1065,0,{    // Щ
  0b10001,
  0b10001,
  0b10001,
  0b10101,
  0b10101,
  0b10101,
  0b11111,
  0b00001
}},    
  {1066,0,{    // Ъ
  0b11000,
  0b01000,
  0b01000,
  0b01110,
  0b01001,
  0b01001,
  0b01110,
  0b00000
}},    
  {1067,0,{    // Ы
  0b10001,
  0b10001,
  0b10001,
  0b11101,
  0b10011,
  0b10011,
  0b11101,
  0b00000
}},    
  {1068,0,{    // Ь
  0b10000,
  0b10000,
  0b10000,
  0b11110,
  0b10001,
  0b10001,
  0b11110,
  0b00000
}},    
  {1069,0,{    // Э
  0b01110,
  0b10001,
  0b00001,
  0b00111,
  0b00001,
  0b10001,
  0b01110,
  0b00000
}},    
  {1070,0,{    // Ю
  0b10010,
  0b10101,
  0b10101,
  0b11101,
  0b10101,
  0b10101,
  0b10010,
  0b00000
}},    
  {1071,0,{    // Я
  0b01111,
  0b10001,
  0b10001,
  0b01111,
  0b00101,
  0b01001,
  0b10001,
  0b00000
}},    
  {1072,'a'},  // а
  {1073,0,{    // б
  0b00011,
  0b01100,
  0b10000,
  0b11110,
  0b10001,
  0b10001,
  0b01110,
  0b00000
}},    
  {1074,0,{    // в
  0b00000,
  0b00000,
  0b11110,
  0b10001,
  0b11110,
  0b10001,
  0b11110,
  0b00000
}},    
  {1075,0,{    // г
  0b00000,
  0b00000,
  0b11110,
  0b10000,
  0b10000,
  0b10000,
  0b10000,
  0b00000
}},    
  {1076,0,{    // д
  0b00000,
  0b00000,
  0b00110,
  0b01010,
  0b01010,
  0b01010,
  0b11111,
  0b10001
}},    
  {1077,'e'},  // е
  {1105,0,{    // ё
  0b01010,
  0b00000,
  0b01110,
  0b10001,
  0b11111,
  0b10000,
  0b01111,
  0b00000
}},    
  {1078,0,{    // ж
  0b00000,
  0b00000,
  0b10101,
  0b10101,
  0b01110,
  0b10101,
  0b10101,
  0b00000
}},    
  {1079,0,{    // з
  0b00000,
  0b00000,
  0b01110,
  0b10001,
  0b00110,
  0b10001,
  0b01110,
  0b00000
}},    
  {1080,0,{    // и
  0b00000,
  0b00000,
  0b10001,
  0b10011,
  0b10101,
  0b11001,
  0b10001,
  0b00000
}},    
  {1081,0,{    // й
  0b01010,
  0b00100,
  0b10001,
  0b10011,
  0b10101,
  0b11001,
  0b10001,
  0b00000
}},    
  {1082,0,{    // к
  0b00000,
  0b00000,
  0b10010,
  0b10100,
  0b11000,
  0b10100,
  0b10010,
  0b00000
}},    
  {1083,0,{    // л
  0b00000,
  0b00000,
  0b00111,
  0b01001,
  0b01001,
  0b01001,
  0b10001,
  0b00000
}},    
  {1084,0,{    // м
  0b00000,
  0b00000,
  0b10001,
  0b11011,
  0b10101,
  0b10001,
  0b10001,
  0b00000
}},     
  {1085,0,{    // н
  0b00000,
  0b00000,
  0b10001,
  0b10001,
  0b11111,
  0b10001,
  0b10001,
  0b00000
}},    
  {1086,'o'},  // о
  {1087,0,{    // п
  0b00000,
  0b00000,
  0b11111,
  0b10001,
  0b10001,
  0b10001,
  0b10001,
  0b00000
}},    
  {1088,'p'},  // р
  {1089,'c'},  // с
  {1090,0,{    // т
  0b00000,
  0b00000,
  0b11111,
  0b00100,
  0b00100,
  0b00100,
  0b00100,
  0b00000
}},    
  {1091,'y'},  // у
  {1092,0,{    // ф
  0b00000,
  0b00000,
  0b00100,
  0b01110,
  0b10101,
  0b01110,
  0b00100,
  0b00000
}},    
  {1093,'x'},  // х
  {1094,0,{    // ц
  0b00000,
  0b00000,
  0b10010,
  0b10010,
  0b10010,
  0b10010,
  0b11111,
  0b00001
}},    
  {1095,0,{     // ч
  0b00000,
  0b00000,
  0b10001,
  0b10001,
  0b01111,
  0b00001,
  0b00001,
  0b00000
}},   
  {1096,0,{     // ш
  0b00000,
  0b00000,
  0b10101,
  0b10101,
  0b10101,
  0b10101,
  0b11111,
  0b00000
}},   
  {1097,0,{    // щ
  0b00000,
  0b00000,
  0b10101,
  0b10101,
  0b10101,
  0b10101,
  0b11111,
  0b00001
}},    
  {1098,0,{    // ъ
  0b00000,
  0b00000,
  0b11000,
  0b01000,
  0b01110,
  0b01001,
  0b01110,
  0b00000
}},    
  {1099,0,{     // ы
  0b00000,
  0b00000,
  0b10001,
  0b10001,
  0b11101,
  0b10011,
  0b11101,
  0b00000
}},   
  {1100,0,{    // ь
  0b00000,
  0b00000,
  0b10000,
  0b10000,
  0b11110,
  0b10001,
  0b11110,
  0b00000
}},    
  {1101,0,{    // э
  0b00000,
  0b00000,
  0b01110,
  0b10001,
  0b00111,
  0b10001,
  0b01110,
  0b00000
}},    
  {1102,0,{    // ю
  0b00000,
  0b00000,
  0b10010,
  0b10101,
  0b11101,
  0b10101,
  0b10010,
  0b00000
}},    
  {1103,0,{    // я 
  0b00000,
  0b00000,
  0b01111,
  0b10001,
  0b01111,
  0b00101,
  0b01001,
  0b00000
}}      
};

const size_t char_mapping_size = sizeof(char_mapping);

#endif
